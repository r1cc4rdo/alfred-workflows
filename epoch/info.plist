<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>gherardi.riccardo.epoch</string>
	<key>category</key>
	<string>Tools</string>
	<key>connections</key>
	<dict>
		<key>EEEE945B-4A5B-43BF-93A7-9700F1E01E24</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>DF3C1A76-C310-404B-8EB0-F972722E39F5</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Riccardo Gherardi</string>
	<key>description</key>
	<string>Copy epoch time to clipboard</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Epoch</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>autopaste</key>
				<false/>
				<key>clipboardtext</key>
				<string>{query}</string>
				<key>transient</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.clipboard</string>
			<key>uid</key>
			<string>DF3C1A76-C310-404B-8EB0-F972722E39F5</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>epoch</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string></string>
				<key>script</key>
				<string>import sys
import time
import json


def to_string(epoch):
	return time.strftime("%Y-%m-%dT%H:%M:%S-00", time.gmtime(epoch))


def item(fmt, time_str):
    message = '{} {}'.format(time_str, sys.argv[1]) if sys.argv[1] else time_str
    return {
        "uid": "epoch{}".format(fmt),
        "title": "Copy epoch to clipboard ({})".format(fmt),
        "subtitle": message,
        "arg": message}

try:
    
    rfc2822 = to_string(float(sys.argv[1]))
    print json.dumps({"items": [{
        "title": "Copy rfc2822 to clipboard",
        "subtitle": rfc2822,
        "arg": rfc2822}]})
    
except ValueError:

    now = time.time()
    print json.dumps({
        "rerun": 1,
        "items": [
            item('s', str(int(now))),
            item('ms', str(int(now * 1000))),
            item('rfc2822', to_string(now))]})
</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Copy epoch time to clipboard</string>
				<key>type</key>
				<integer>3</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>EEEE945B-4A5B-43BF-93A7-9700F1E01E24</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string></string>
	<key>uidata</key>
	<dict>
		<key>DF3C1A76-C310-404B-8EB0-F972722E39F5</key>
		<dict>
			<key>xpos</key>
			<integer>220</integer>
			<key>ypos</key>
			<integer>30</integer>
		</dict>
		<key>EEEE945B-4A5B-43BF-93A7-9700F1E01E24</key>
		<dict>
			<key>xpos</key>
			<integer>40</integer>
			<key>ypos</key>
			<integer>30</integer>
		</dict>
	</dict>
	<key>webaddress</key>
	<string>https://github.com/r1cc4rdo/alfred-workflows</string>
</dict>
</plist>
